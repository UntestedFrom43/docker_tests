Здесь будет проводиться запуск примера docker whalesay
A) Чтобы получить символьное изображение с китом, нужно:
	- docker pull docker/whalesay
	- удостовериться, что образ на месте
	- авторизоваться через docker login
	- запустить docker run docker/whalesay cowsay boo
	- получаем:
 _____ 
< boo >
 ----- 
    \
     \
      \     
                    ##        .            
              ## ## ##       ==            
           ## ## ## ##      ===            
       /""""""""""""""""___/ ===        
  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~   
       \______ o          __/            
        \    \        __/             
          \____\______/   
	
B)	- далее запускаем и устанавливаем Alpine через docker run alpine
	- важный дополнительный момент для остановки и удаления всех контейнеров ранее:
	docker ps -q | xargs docker stop остановит все контейнеры
	docker rm $(docker ps -a -q) удалит все контейнеры
	docker rmi $(docker images -q) удалит все образы
	

C)	Чтобы комфортно работать в контейнере, не вылетая из него при запуске, как это бывает с контейнерами ОС, можно сделать так:
	- docker run alpine -it alpine sh
	Это пример. Команда -it запускает в контейнер, а вместо  sh (shell) может быть что-то другое.	
	В самой оболочке внутри Alpine можно посмотреть для примера hostname и cat etc/*rel* чтобы удостовериться в работе.
	Выход через exit

D)	Для того, чтобы удостовериться в работе контейнера  с Alpine еще проще, можно сделать так:
	docker run -d alpine sleep 15
	где -d запустит контейнер фоном, а sleep 15 будет выполнять свою команду, и после 15 секунд выполнит ее. Этого хватит,
	чтобы использовать docker ps и увидеть контейнер в активных.	
